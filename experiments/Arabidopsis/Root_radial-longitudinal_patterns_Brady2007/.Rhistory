View(brady_radial_long)
Arabidopsis_root_LongRadialPatternsIntersect_Brady2007<-brady_radial_long
View(enrichment)
enrichment<-function(mygenes) {
experiment_id <- Arabidopsis_root_LongRadialPatternsIntersect_Brady2007
# Avoid duplications in user-input genes
mygenes<-unique(mygenes)
# Case insensitive
mygenes<-toupper(mygenes)
# Create a vector that will hold the pvalues of Fisher test per tissue
myvector<-c()
# Loop over the tissue list with expression-specific genes (experiment id)
for (i in 1:length(experiment_id)) {
# Genes detected in the microarray/RNAseq that are not in user-input
nomygenes<-setdiff(geneuniverse,mygenes)
# Generate contingency table
mytable<-rbind(c(length(which(mygenes%in%experiment_id[[i]])),#  genes in mylist & enriched in tissue iN
length(which(mygenes%in%experiment_id[[i]]==FALSE))), #  genes in my list & NOT enriched in tissue iN
c(length(which(nomygenes%in%experiment_id[[i]])), #  genes NOT in my list & enriched in tissue iN
length(which(nomygenes%in%experiment_id[[i]]==FALSE)))) #  genes NOT in my list & NOT enriched in tissue iN
# Add names to the contingency table (traceback)
rownames(mytable)<-c("Mygenes","!Mygenes"); colnames(mytable)<-c("Enriched","!Enriched")
# Append to myvector the Fishers exact test result (pvalue)
myvector<-c(myvector,fisher.test(mytable,alternative = "greater")$p.value) # Alternative = greater because the scope is to detect overepresentation of tissue-specific genes in the user gene list
}
# Add tissue names to myvector
names(myvector)<-names(experiment_id)
# Return the -log transformed pvalue vector
return(-log(myvector))
}
View(enrichment)
save.image("~/Dropbox/TOTEM/local_totem/experiments/Arabidopsis_root_LongRadialPatternsIntersect_Brady2007/Arabidopsis_root_LongRadialPatternsIntersect_Brady2007.RData")
load("/Users/fidel/Dropbox/TOTEM/local_totem/experiments/Sorghum_Davision2012/Sorghum_Davison2012.RData")
View(davidson_sorghum)
View(davidson_sorghum2)
View(enrichment)
Sorghum_Davison2012<-davidson_sorghum
Sorghum_Davison2012_2<-davidson_sorghum2
rm(Sorghum_Davison2012)
rm(Sorghum_Davison2012_2)
Sorghum_Davidson2012<-davidson_sorghum
Sorghum_Davidson2012_2<-davidson_sorghum2
enrichment<-function(mygenes) {
# Avoid duplications in user-input genes
mygenes<-unique(mygenes)
# Case insensitive
mygenes<-tolower(mygenes)
# Check if the annotation is according the old nomenclature or the new one, and use the corresponding data
# Test the first gene of user input (all genes should be in the same nomenclature)
if (grepl("Sobic\\.\\d{3}G\\d{6}$", mygenes[1],ignore.case = TRUE)) {
experiment_id <- Sorghum_Davidson2012_2
specific_geneuniverse<-geneuniverse2
# If not try the last gene, it may be a mistake in the header??
} else if (grepl("Sobic\\.\\d{3}G\\d{6}$", mygenes[length(mygenes)],ignore.case = TRUE)) {
experiment_id <- Sorghum_Davidson2012_2
specific_geneuniverse<-geneuniverse2
# If not, assume is in the standard notation
} else {
experiment_id <- Sorghum_Davidson2012
specific_geneuniverse<-geneuniverse
}
# Create a vector that will hold the pvalues of Fisher test per tissue
myvector<-c()
# Loop over the tissue list with expression-specific genes (experiment id)
for (i in 1:length(experiment_id)) {
# Genes detected in the microarray/RNAseq that are not in user-input
nomygenes<-setdiff(specific_geneuniverse,mygenes)
# Generate contingency table
mytable<-rbind(c(length(which(mygenes%in%experiment_id[[i]])),#  genes in mylist & enriched in tissue iN
length(which(mygenes%in%experiment_id[[i]]==FALSE))), #  genes in my list & NOT enriched in tissue iN
c(length(which(nomygenes%in%experiment_id[[i]])), #  genes NOT in my list & enriched in tissue iN
length(which(nomygenes%in%experiment_id[[i]]==FALSE)))) #  genes NOT in my list & NOT enriched in tissue iN
# Add names to the contingency table (traceback)
rownames(mytable)<-c("Mygenes","!Mygenes"); colnames(mytable)<-c("Enriched","!Enriched")
# Append to myvector the Fishers exact test result (pvalue)
myvector<-c(myvector,fisher.test(mytable,alternative = "greater")$p.value) # Alternative = greater because the scope is to detect overepresentation of tissue-specific genes in the user gene list
}
# Add tissue names to myvector
names(myvector)<-names(experiment_id)
# Return the -log transformed pvalue vector
return(-log(myvector))
}
rm(davidson_sorghum)
rm(davidson_sorghum2)
save.image("~/Dropbox/TOTEM/local_totem/experiments/Sorghum_Davidson2012/Sorghum_Davison2012.RData")
